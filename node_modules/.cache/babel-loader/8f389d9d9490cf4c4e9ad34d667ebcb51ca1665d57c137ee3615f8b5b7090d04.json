{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_URL;\nexport const login = (email, password) => {\n  return new Promise((resolve, reject) => {\n    // Simple mock: accept a specific email/password, else reject\n    if (email === 'test@example.com' && password === 'password123') {\n      resolve({\n        data: {\n          userId: 1,\n          email,\n          role: 'dentist',\n          // or 'technician'\n          token: 'fake-jwt-token'\n        }\n      });\n    } else {\n      reject({\n        message: 'Invalid credentials'\n      });\n    }\n  });\n};\nexport const uploadScan = formData => axios.post(`${API_BASE}/upload`, formData);\nexport const fetchScans = () => axios.get(`${API_BASE}/scans`);","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_URL","login","email","password","Promise","resolve","reject","data","userId","role","token","message","uploadScan","formData","post","fetchScans","get"],"sources":["C:/Users/DELL/Desktop/oralvis/oralvis_healthcare/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_URL;\r\n\r\nexport const login = (email, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    // Simple mock: accept a specific email/password, else reject\r\n    if (email === 'test@example.com' && password === 'password123') {\r\n      resolve({\r\n        data: {\r\n          userId: 1,\r\n          email,\r\n          role: 'dentist',  // or 'technician'\r\n          token: 'fake-jwt-token',\r\n        }\r\n      });\r\n    } else {\r\n      reject({ message: 'Invalid credentials' });\r\n    }\r\n  });\r\n};\r\n\r\n\r\nexport const uploadScan = (formData) =>\r\n  axios.post(`${API_BASE}/upload`, formData);\r\n\r\nexport const fetchScans = () =>\r\n  axios.get(`${API_BASE}/scans`);\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE9C,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACxC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC;IACA,IAAIJ,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,aAAa,EAAE;MAC9DE,OAAO,CAAC;QACNE,IAAI,EAAE;UACJC,MAAM,EAAE,CAAC;UACTN,KAAK;UACLO,IAAI,EAAE,SAAS;UAAG;UAClBC,KAAK,EAAE;QACT;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLJ,MAAM,CAAC;QAAEK,OAAO,EAAE;MAAsB,CAAC,CAAC;IAC5C;EACF,CAAC,CAAC;AACJ,CAAC;AAGD,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IACjCjB,KAAK,CAACkB,IAAI,CAAC,GAAGjB,QAAQ,SAAS,EAAEgB,QAAQ,CAAC;AAE5C,OAAO,MAAME,UAAU,GAAGA,CAAA,KACxBnB,KAAK,CAACoB,GAAG,CAAC,GAAGnB,QAAQ,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}